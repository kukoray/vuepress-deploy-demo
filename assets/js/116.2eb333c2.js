(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{536:function(s,t,a){"use strict";a.r(t);var n=a(65),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[s._v("#")]),s._v(" Docker")]),s._v(" "),a("h2",{attrs:{id:"docker概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker概述"}},[s._v("#")]),s._v(" docker概述")]),s._v(" "),a("h3",{attrs:{id:"docker为什么出现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker为什么出现"}},[s._v("#")]),s._v(" docker为什么出现？")]),s._v(" "),a("p",[s._v("项目能不能带上环境安装打包（镜像）")]),s._v(" "),a("p",[s._v("主要是为了解决环境配置复杂麻烦的问题")]),s._v(" "),a("p",[s._v("Docker通过隔离机制，可以将服务器利用到极致")]),s._v(" "),a("p",[s._v("Docker是基于go语言开发的")]),s._v(" "),a("h3",{attrs:{id:"docker能干嘛"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker能干嘛"}},[s._v("#")]),s._v(" docker能干嘛？")]),s._v(" "),a("p",[s._v("什么是虚拟化技术？")]),s._v(" "),a("blockquote",[a("p",[s._v("虚拟化，是指通过虚拟化技术将一台计算机虚拟为多台逻辑计算机。在一台计算机上同时运行多个逻辑计算机，每个逻辑计算机可运行不同的操作系统，并且应用程序都可以在相互独立的空间内运行而互不影响，从而显著提高计算机的工作效率。")])]),s._v(" "),a("p",[s._v("什么是hypervisor？")]),s._v(" "),a("blockquote",[a("p",[s._v("Hypervisor一种运行在基础物理"),a("a",{attrs:{href:"https://cloud.tencent.com/product/cvm?from=10680",target:"_blank",rel:"noopener noreferrer"}},[s._v("服务器"),a("OutboundLink")],1),s._v("和操作系统之间的中间软件层，可允许多个操作系统和应用共享硬件。也可叫做VMM( virtual machine monitor )，即虚拟机监视器。")]),s._v(" "),a("p",[s._v("Hypervisor是一种在虚拟环境中的“元”操作系统。他们可以访问服务器上包括磁盘和内存在内的所有物理设备。Hypervisor不但协调着这些硬件资源的访问，也同时在各个虚拟机之间施加防护。当服务器启动并执行Hypervisor时，它会加载所有虚拟机客户端的操作系统同时会分配给每一台虚拟机适量的内存，CPU，网络和磁盘。")])]),s._v(" "),a("p",[s._v("容器和虚拟机之间的区别？")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("Q1：Container技术和服务器虚拟化是一样的技术吗?")])]),s._v(" "),a("p",[s._v("A：不是。"),a("code",[s._v("两者虽然都属于虚拟化的技术")]),s._v("，目标都是为了将一套应用程序所需的执行环境打包起来，建立一个孤立环境，方便在不同的硬件中移动，但两者的运作思维截然不同。简单来说，常见的传统虚拟化技术如vSphere或Hyper-V是以操作系统为中心，而Container技术则是一种以应用程序为中心的虚拟化技术。")]),s._v(" "),a("p",[s._v("传统虚拟化技术从操作系统层下手，目标是建立一个可以用来执行整套操作系统的沙盒独立执行环境，习惯以虚拟机(Virtual Machine)来称呼。而Container技术则是直接将一个应用程序所需的相关程序代码、函式库、环境配置文件都打包起来建立沙盒执行环境，为了和传统虚拟化技术产生的虚拟机区分，Container技术产生的环境就称为Container。")]),s._v(" "),a("p",[a("strong",[s._v("Q2：一般常见的虚拟机和Container有何不同?")])]),s._v(" "),a("p",[s._v("A：最明显的差别是，虚拟机需要安装操作系统(安装Guest OS)才能执行应用程序，而Container内不需要安装操作系统就能执行应用程序。Container技术不是在OS外来建立虚拟环境，而是在OS内的核心系统层来打造虚拟执行环境，透过共享Host OS的作法，取代一个一个Guest OS的功用。Container也因此被称为是OS层的虚拟化技术。")]),s._v(" "),a("p",[a("strong",[s._v("Q3：为何Container是轻量级虚拟化技术?")])]),s._v(" "),a("p",[s._v("A：因为Container技术采取共享Host OS的作法，而不需在每一个Container内执行Guest OS，因此建立Container不需要等待操作系统开机时间，不用1分钟或几秒钟就可以启用，远比需要数分钟甚至数十分钟才能开启的传统虚拟机来的快。")])]),s._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://s2.loli.net/2022/10/27/HA3697EqZszOfrL.png",alt:"image-20221027195123052"}}),s._v(" "),a("h2",{attrs:{id:"docker安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker安装"}},[s._v("#")]),s._v(" docker安装")]),s._v(" "),a("p",[a("strong",[s._v("镜像images：")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" 镜像（Image）就是一个只读的模板。镜像可以用来创建 Docker 容器，一个镜像可以创建很多容器。 就好似 Java 中的 类和对象，类就是镜像，容器就是对象！\n")])])]),a("p",[a("strong",[s._v("容器container：")])]),s._v(" "),a("p",[s._v("容器和镜像的关系，更像是对象和类的关系。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("Docker 利用容器（Container）独立运行的一个或一组应用。容器是用镜像创建的运行实例。\n它可以被启动、开始、停止、删除。每个容器都是相互隔离的，保证安全的平台。\n可以把容器看做是一个简易版的 Linux 环境（包括root用户权限、进程空间、用户空间和网络空间等）和运行在其中的应用程序。\n容器的定义和镜像几乎一模一样，也是一堆层的统一视角，唯一区别在于容器的最上面那一层是可读可写的。\n")])])]),a("p",[a("strong",[s._v("仓库repository：")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("仓库（Repository）是集中存放镜像文件的场所。\n仓库（Repository）和仓库注册服务器（Registry）是有区别的。仓库注册服务器上往往存放着多个仓库，每个仓库中又包含了多个镜像，每个镜像有不同的标签（tag）。\n仓库分为公开仓库（Public）和私有仓库（Private）两种形式。\n最大的公开仓库是 Docker Hub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("https://hub.docker.com/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("，存放了数量庞大的镜像供用户下载。\n国内的公开仓库包括阿里云 、网易云 等\n")])])]),a("p",[s._v("测试是否安装成功")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" version\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run hello-world\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" images\n")])])]),a("p",[s._v("卸载")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("systemctl stop "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" remove docker-ce docker-ce-cli containerd.io\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf /var/lib/docker\n")])])]),a("h3",{attrs:{id:"docker运行逻辑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker运行逻辑"}},[s._v("#")]),s._v(" Docker运行逻辑")]),s._v(" "),a("p",[s._v("（run方法的具体流程步骤）")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2022/10/27/HWbjaJv6uLzfIkh.png",alt:"image-20221025201543479"}})]),s._v(" "),a("h2",{attrs:{id:"docker常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker常用命令"}},[s._v("#")]),s._v(" docker常用命令")]),s._v(" "),a("h3",{attrs:{id:"帮助命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#帮助命令"}},[s._v("#")]),s._v(" 帮助命令")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" version\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" info   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示 docker 系统信息，包括镜像和容器数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" --help\n")])])]),a("h3",{attrs:{id:"镜像命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像命令"}},[s._v("#")]),s._v(" 镜像命令")]),s._v(" "),a("p",[a("strong",[s._v("docker images")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" images 查看所有本地的镜像\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可选项")]),s._v("\n-a: "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#列出本地所有镜像")]),s._v("\n-q: "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#只显示镜像id")]),s._v("\n-aq: "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#列出本地所有镜像的id号")]),s._v("\n\nroot@localhost:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker images -aq")]),s._v("\n8fad08b3c84b\nfeb5d9fea6a5\n5d0da3dc9764\nroot@localhost:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker images -a")]),s._v("\nREPOSITORY    TAG       IMAGE ID       CREATED         SIZE\nmysql         latest    8fad08b3c84b   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" days ago      535MB\nhello-world   latest    feb5d9fea6a5   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(" months ago   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(".3kB\ncentos        latest    5d0da3dc9764   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(" months ago   231MB\nroot@localhost:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n")])])]),a("p",[a("strong",[s._v("docker search")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("root@localhost:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker search nginx")]),s._v("\nNAME                                              DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED\nnginx                                             Official build of Nginx.                        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17584")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nlinuxserver/nginx                                 An Nginx container, brought to you by LinuxS…   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("179")]),s._v("\nbitnami/nginx                                     Bitnami nginx Docker Image                      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("141")]),s._v("                  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nubuntu/nginx                                      Nginx, a high-performance reverse proxy "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" we…   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v("\nbitnami/nginx-ingress-controller                  Bitnami Docker Image "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" NGINX Ingress Contr…   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nrancher/nginx-ingress-controller                                                                  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("\nwebdevops/nginx                                   Nginx container                                 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),a("p",[a("strong",[s._v("docker pull")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("root@localhost:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker pull nginx")]),s._v("\nUsing default tag: latest   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不写tag 默认是latest")]),s._v("\nlatest: Pulling from library/nginx\ne9995326b091: Downloading "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("                                   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(".505MB/31.42MB\n71689475aec2: Downloading "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(".37MB/25.41MB\nf88a23025338: Downloading "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("     627B/627B\n0df440342e26: Download complete   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#这里采用了分层下载")]),s._v("\neef26ceb3309: Download complete\n8e3ed6a9e43a: Download complete\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定版本下载")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@kuangshen ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker pull mysql:5.7")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("\n")])])]),a("p",[a("strong",[s._v("docker rmi")])]),s._v(" "),a("p",[s._v("意思是docker "),a("strong",[s._v("re")]),s._v("move "),a("strong",[s._v("i")]),s._v("mages")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" rmi -f 镜像id "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除单个")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" rmi -f 镜像名:tag 镜像名:tag "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除多个")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" rmi -f "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" images -qa"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除全部")]),s._v("\n")])])]),a("h3",{attrs:{id:"容器命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器命令"}},[s._v("#")]),s._v(" 容器命令")]),s._v(" "),a("p",[a("strong",[s._v("说明：有镜像才可以创建容器！")])]),s._v(" "),a("p",[a("strong",[s._v("新建容器并启动")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" image "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("command"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 常用参数说明")]),s._v("\n--name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Name"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 给容器指定一个名字")]),s._v("\n-d "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 后台方式运行容器，并返回容器的id！")]),s._v("\n-i "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以交互模式运行容器，通过和 -t 一起使用")]),s._v("\n-t "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 给容器重新分配一个终端，通常和 -i 一起使用")]),s._v("\n-P "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 随机端口映射（大写）")]),s._v("\n-p "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定端口映射（小结），一般可以有四种写法")]),s._v("\n\nroot@localhost:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker run -it centos /bin/bash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@1aa6548d4635 /"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ls")]),s._v("\nbin  dev  etc  home  lib  lib64  lost+found  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@1aa6548d4635 /"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@1aa6548d4635 /"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exit")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v("\nroot@localhost:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n\n这里使用快捷键ctrl+D  同样也是exit的效果！退出并停止容器的运行。\n使用快捷键ctrl+P+Q 是退出，但是保留容器的运行。\n\n\n端口映射\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d --name nginx01 -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3344")]),s._v(":80 nginx \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在后台运行  nginx容器  把服务器的3344外部端口 映射 容器内部端口80  并对该容器起了别名nginx01")]),s._v("\n\nroot@localhost:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker run -d --name nginx01 -p 3344:80 nginx")]),s._v("\ncb7e020cf886c51c9a5574510f2af39d9dae4529a2a82fd4fa64674a67150d84\nroot@localhost:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# curl localhost:3344")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("DOCTYPE html"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("html"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("head"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("title"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Welcome to nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/title"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("style"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nhtml "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" color-scheme: light dark"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nbody "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" width: 35em"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" margin: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nfont-family: Tahoma, Verdana, Arial, sans-serif"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/style"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/head"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("body"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("h"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v("Welcome to nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/h"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required."),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("For online documentation and support please refer to\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("href")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://nginx.org/"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("nginx.org"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("."),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("br/"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nCommercial support is available at\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("href")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://nginx.com/"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("nginx.com"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("."),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("em"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Thank you "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" using nginx."),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/em"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/body"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/html"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nroot@localhost:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n\nroot@localhost:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker ps")]),s._v("\nCONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                                   NAMES\ncb7e020cf886   nginx     "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/docker-entrypoint.…"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("39")]),s._v(" seconds ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("38")]),s._v(" seconds   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:3344-"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("/tcp, :::3344-"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("/tcp   nginx01\n")])])]),a("p",[a("strong",[s._v("列出所有运行的容器")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("root@localhost:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker ps")]),s._v("\nCONTAINER ID   IMAGE     COMMAND       CREATED       STATUS       PORTS     NAMES\n66674cb229f1   centos    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours             inspiring_ritchie\nf096a83a8eff   centos    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours             vibrant_kepler\nroot@localhost:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker ps -a")]),s._v("\nCONTAINER ID   IMAGE         COMMAND       CREATED              STATUS                          PORTS     NAMES\n1aa6548d4635   centos        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v("   About a minute ago   Exited "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" About a minute ago             suspicious_raman\n66674cb229f1   centos        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours ago          Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours                                inspiring_ritchie\nf096a83a8eff   centos        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours ago          Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours                                vibrant_kepler\n160ff4c9a651   centos        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours ago          Exited "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours ago                    kind_lumiere\ncb42d37479e3   centos        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours ago          Exited "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours ago                    pensive_hugle\n430e7fc7b6e8   centos        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours ago          Exited "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours ago                    jovial_dijkstra\ne9d7a074d624   centos        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" hours ago          Exited "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours ago                    dreamy_swartz\nac3169b94675   centos        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" hours ago          Exited "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" hours ago                    magical_lumiere\nc6544e906e57   centos        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" hours ago          Exited "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" hours ago                    vigilant_davinci\n67c96603bdfd   hello-world   "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/hello"')]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" days ago           Exited "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" days ago                     stupefied_blackwell\nroot@localhost:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker ps -aq")]),s._v("\n1aa6548d4635\n66674cb229f1\nf096a83a8eff\n160ff4c9a651\ncb42d37479e3\n430e7fc7b6e8\ne9d7a074d624\nac3169b94675\nc6544e906e57\n67c96603bdfd\nroot@localhost:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n")])])]),a("p",[a("strong",[s._v("退出容器")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器停止退出")]),s._v("\nctrl+P+Q "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器不停止退出")]),s._v("\n\nroot@localhost:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker run -d tomcat")]),s._v("\n20858f07fb6dc3285c565b2de5fae2f10f4980430c771032874d1b93c9dbd755\nroot@localhost:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker ps")]),s._v("\nCONTAINER ID   IMAGE     COMMAND             CREATED         STATUS         PORTS      NAMES\n20858f07fb6d   tomcat    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"catalina.sh run"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" seconds ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" seconds   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("/tcp   ecstatic_mclaren\nroot@localhost:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker exec -it 20858f07fb6d /bin/bash")]),s._v("\nroot@20858f07fb6d:/usr/local/tomcat"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exit")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v("\nroot@localhost:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker ps")]),s._v("\nCONTAINER ID   IMAGE     COMMAND             CREATED          STATUS          PORTS      NAMES\n20858f07fb6d   tomcat    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"catalina.sh run"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("31")]),s._v(" seconds ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v(" seconds   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("/tcp   ecstatic_mclaren\nroot@localhost:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),s._v("\n\n这里注意一点，exit对于本身就是在后台运行的容器，就是说启动时-d启动的，使用exit时容器是不会关闭的。\n但是用-it前台启动的，使用exit会退出并停止\n")])])]),a("p",[a("strong",[s._v("启动停止容器")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" start "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("容器id or 容器名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" restart "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("容器id or 容器名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" stop "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("容器id or 容器名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("容器id or 容器名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 强制停止容器")]),s._v("\n")])])]),a("p",[a("strong",[s._v("删除容器")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" 容器id "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除指定容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a -q"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除所有容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a -q"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除所有容器")]),s._v("\n")])])]),a("h3",{attrs:{id:"常用其他命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用其他命令"}},[s._v("#")]),s._v(" 常用其他命令")]),s._v(" "),a("p",[a("strong",[s._v("后台启动容器")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 命令")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d 容器名\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 例子")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d centos "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动centos，使用后台方式启动")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 问题： 使用docker ps 查看，发现容器已经退出了！")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 解释：Docker容器后台运行，就必须有一个前台进程，容器运行的命令如果不是那些一直挂起的命令，就会自动退出。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 比如，你运行了nginx服务，但是docker前台没有运行应用，这种情况下，容器启动后，会立即自杀，因为他觉得没有程序了，所以最好的情况是，将你的应用使用前台进程的方式运行启动。")]),s._v("\n")])])]),a("p",[a("strong",[s._v("查看日志")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -t 显示时间戳")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -f 打印最新的日志")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --tail 数字 显示多少条！")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@kuangshen ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker logs -tf --tail 10 c8530dbbe3b4")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("-05-11T08:46:40.656901941Z kuangshen\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("-05-11T08:46:41.658765018Z kuangshen\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("-05-11T08:46:42.661015375Z kuangshen\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("-05-11T08:46:43.662865628Z kuangshen\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("-05-11T08:46:44.664571547Z kuangshen\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("-05-11T08:46:45.666718583Z kuangshen\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("-05-11T08:46:46.668556725Z kuangshen\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("-05-11T08:46:47.670424699Z kuangshen\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("-05-11T08:46:48.672324512Z kuangshen\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("-05-11T08:46:49.674092766Z kuangshen\n")])])]),a("p",[a("strong",[s._v("查看容器中运行的进程信息，支持 ps 命令参数")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")]),s._v(" 容器id\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@kuangshen ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker top c8530dbbe3b4")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("UID")]),s._v(" PID "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PPID")]),s._v(" C STIME TTY TIME CMD\nroot "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("27437")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("27421")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(":43 ? 00:00:00 /bin/sh -c "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("\n")])])]),a("p",[a("strong",[s._v("查看容器/镜像的原数据")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("root@localhost:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker inspect 66674cb229f1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Id"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"66674cb229f1a2622d25229a20aa251124511473815ed9c9faf1464df0e9936f"')]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Created"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2022-10-27T12:02:56.089059143Z"')]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Path"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Args"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"State"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Status"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"running"')]),s._v(",\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Running"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" true,\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Paused"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" false,\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Restarting"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" false,\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"OOMKilled"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" false,\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Dead"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" false,\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Pid"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1427120")]),s._v(",\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ExitCode"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(",\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Error"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(",\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"StartedAt"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2022-10-27T12:02:56.481827573Z"')]),s._v(",\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"FinishedAt"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0001-01-01T00:00:00Z"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])]),a("p",[a("strong",[s._v("进入正在运行的容器")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#命令一")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it 容器id bashShell\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 测试1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it c8530dbbe3b4 /bin/bash\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 命令2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" attach 容器id\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#测试2")]),s._v("\nroot@localhost:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\nroot@localhost:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker ps")]),s._v("\nCONTAINER ID   IMAGE     COMMAND       CREATED       STATUS       PORTS     NAMES\n66674cb229f1   centos    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours             inspiring_ritchie\nf096a83a8eff   centos    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours             vibrant_kepler\nroot@localhost:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker attach 66674cb229f1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@66674cb229f1 /"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ls")]),s._v("\nbin  dev  etc  home  lib  lib64  lost+found  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 区别")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exec 是在容器中打开新的终端，并且可以启动新的进程")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# attach 直接进入容器启动命令的终端，不会启动新的进程")]),s._v("\n\n")])])]),a("p",[a("strong",[s._v("把容器内拷贝文件到主机上")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("root@localhost:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker ps")]),s._v("\nCONTAINER ID   IMAGE     COMMAND       CREATED       STATUS          PORTS     NAMES\n66674cb229f1   centos    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("56")]),s._v(" seconds             inspiring_ritchie\nf096a83a8eff   centos    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours ago   Up "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours                vibrant_kepler\nroot@localhost:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker cp 66674cb229f1:/home/test.java /home/")]),s._v("\nroot@localhost:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cd /home/")]),s._v("\nroot@localhost:/home"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ls")]),s._v("\njacky  test.java\nroot@localhost:/home"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2022/10/27/B9GQ3gyFsWCLRma.jpg",alt:"Docker命令总结"}})]),s._v(" "),a("h3",{attrs:{id:"可视化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可视化"}},[s._v("#")]),s._v(" 可视化")]),s._v(" "),a("p",[s._v("Portainer可视化面板")]),s._v(" "),a("h2",{attrs:{id:"docker镜像讲解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker镜像讲解"}},[s._v("#")]),s._v(" docker镜像讲解")]),s._v(" "),a("h3",{attrs:{id:"镜像是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像是什么"}},[s._v("#")]),s._v(" 镜像是什么")]),s._v(" "),a("p",[s._v("镜像是一种轻量级、可执行的独立软件包，"),a("strong",[s._v("用来打包软件运行环境和基于环境开发的软件")])]),s._v(" "),a("p",[s._v("它包含运行某个软件所需要的所有内容，像代码、运行时库、环境变量、配置文件等")]),s._v(" "),a("h3",{attrs:{id:"docker镜像加载原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker镜像加载原理"}},[s._v("#")]),s._v(" docker镜像加载原理")]),s._v(" "),a("blockquote",[a("p",[s._v("UnionFS 联合文件系统")])]),s._v(" "),a("p",[s._v("UnionFS（联合文件系统）：Union文件系统（UnionFS）是一种"),a("strong",[s._v("分层、轻量级并且高性能的文件系统")]),s._v("， 它支持对文件系统的修改作为一次提交来一层层的叠加，同时可以将不同目录挂载到同一个虚拟文件系 统下(unite several directories into a single virtual filesystem)。Union 文件系统是 Docker 镜像的基 础。"),a("strong",[s._v("镜像可以通过分层来进行继承，基于基础镜像（没有父镜像），可以制作各种具体的应用镜像")]),s._v("。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2022/10/28/7jiSmoG2LEbzTZr.png",alt:"image-20221028161022232"}})]),s._v(" "),a("p",[s._v("在读的时候又做了屏蔽目录差异的方式来看起来只有一个文件")]),s._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://s2.loli.net/2022/10/28/Hq9RUYa1I7ncvmK.png",alt:"image-20221028161449305"}}),s._v(" "),a("p",[s._v("容器运行起来的所有修改记录都会保留在容器层，容器层所依赖的镜像层的数据都是只读的；")]),s._v(" "),a("p",[s._v("容器内的修改只对当前容器生效，被隔离开来的")]),s._v(" "),a("p",[s._v("所以删除容器时，只是删除这个容器层（删除容器时，容器外部所挂载的目录不会被删除，但是容器内部的所有数据删除）")]),s._v(" "),a("p",[s._v("当我们提交我们的容器时，也只是提交我们的容器层，下面的镜像层都不需要去被分发")]),s._v(" "),a("blockquote",[a("p",[s._v("docker镜像分层加载原理")])]),s._v(" "),a("p",[s._v("docker的镜像实际上由一层一层的文件系统组成，这种层级的文件系统UnionFS。")]),s._v(" "),a("p",[s._v("bootfs(boot file system)主要包含bootloader和kernel, bootloader主要是引导加载kernel, Linux刚启 动时会加载bootfs文件系统，在Docker镜像的最底层是bootfs。这一层与我们典型的Linux/Unix系统是 一样的，包含boot加载器和内核。当boot加载完成之后整个内核就都在内存中了，此时内存的使用权已 由bootfs转交给内核，此时系统也会卸载bootfs。")]),s._v(" "),a("p",[s._v("rootfs (root file system) ，在bootfs之上。包含的就是典型 Linux 系统中的 /dev, /proc, /bin, /etc 等标 准目录和文件。rootfs就是各种不同的操作系统发行版，比如Ubuntu，Centos等等。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2022/10/29/rnFVu4sXUWejSMy.png",alt:"image-20221029104056356"}})]),s._v(" "),a("p",[s._v("平时我们安装进虚拟机的CentOS都是好几个G，为什么Docker这里才200M？")]),s._v(" "),a("p",[s._v("对于一个精简的OS，rootfs 可以很小，只需要包含最基本的命令，工具和程序库就可以了，因为底层直 接用Host的kernel，自己只需要提供rootfs就可以了。由此可见对于不同的linux发行版, bootfs基本是一 致的, rootfs会有差别, 因此不同的发行版可以公用bootfs。")]),s._v(" "),a("h3",{attrs:{id:"分层原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分层原理"}},[s._v("#")]),s._v(" 分层原理")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.bilibili.com/video/BV178411W7bd/?spm_id_from=333.337.search-card.all.click&vd_source=3142cd6018b75d190e83bdb6e8d24478",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker的镜像分层_哔哩哔哩_bilibili"),a("OutboundLink")],1)]),s._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://s2.loli.net/2022/10/28/5K1HvifjDhRtXxa.png",alt:"image-20221028160243699"}}),s._v(" "),a("p",[s._v("对于每一个镜像层，这一层只包含自己有变更的文件，并不包含他所依赖的基础层的文件")]),s._v(" "),a("p",[s._v("每一个变更可以理解为是一种补丁，在基础镜像层上所作的优化与更新（板本升级）")]),s._v(" "),a("p",[a("strong",[s._v("总结就是：变更会加新层，基础镜像共享，提升存储效率")])]),s._v(" "),a("h3",{attrs:{id:"commit镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commit镜像"}},[s._v("#")]),s._v(" commit镜像")]),s._v(" "),a("p",[s._v("docker commit 从容器创建一个新的镜像")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 语法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" commit -m"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"提交的描述信息"')]),s._v(" -a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"作者"')]),s._v(" 容器id 要创建的目标镜像名:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("标签名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("root@kuko:/var/lib/docker/volumes"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker run -d -p 8080:8080 tomcat")]),s._v("\nd9bcc79f457c865a449b93f92edbe8dfe0f90bef4eb8689005ec7d27e360b06f\nroot@kuko:/var/lib/docker/volumes"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# curl localhost:8080")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("doctype html"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("html "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("lang")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"en"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("head"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("title"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("HTTP Status "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("404")]),s._v(" – Not Found"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/title"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("style "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text/css"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("body "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("font-family:Tahoma,Arial,sans-serif"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" h1, h2, h3, b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("color:white"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("background-color:"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#525D76;} h1 {font-size:22px;} h2 {font-size:16px;} h3 {font-size:14px;} p {font-size:12px;} a {color:black;} .line {height:1px;background-color:#525D76;border:none;}</style></head><body><h1>HTTP Status 404 – Not Found</h1><hr class="line" /><p><b>Type</b> Status Report</p><p><b>Description</b> The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.</p><hr class="line" /><h3>Apache Tomcat/10.1.1</h3></body></html>')]),s._v("\n\nroot@kuko:/var/lib/docker/volumes"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意：坑爹：docker启动官方tomcat镜像的容器，发现404是因为使用了加速器，而加速器里的tomcat的webapps下没有root等文件！")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下载tomcat官方镜像，就是这个镜像（阿里云里的tomcat的webapps下没有任何文件）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入tomcat查看cd到webapps下发现全部空的，反而有个webapps.dist里有对应文件，cp -r到webapps下！")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意：commit的时候，容器的名字不能有大写，否则报错：invalid reference format")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" commit -a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kuangshen"')]),s._v(" -m"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"no tomcat docs"')]),s._v(" 1e98a2f815b0 tomcat02:1.1\nsha256:cdccd4674f93ad34bf73d9db577a20f027a6d03fd1944dc0e628ee4bf17ec748\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@kuangshen /"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker images # 查看，我们自己提交的镜像已经OK了！")]),s._v("\nREPOSITORY TAG IMAGE ID CREATED\nSIZE\ntomcat02 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.1")]),s._v(" cdccd4674f93 About a minute\nago 649MB\nredis latest f9b990972689 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" days ago\n104MB\ntomcat latest 927899a31456 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" weeks ago\n647MB\ncentos latest 470671670cac "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" months ago\n237MB\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这个时候，我们的镜像都是可以使用的，大家可以启动原来的tomcat，和我们新的tomcat02来")]),s._v("\n测试看看！\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@kuangshen ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker run -it -p 8080:8080 tomcat02:1.1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果你想要保存你当前的状态，可以通过commit，来提交镜像，方便使用，类似于 VM 中的快照！")]),s._v("\n")])])]),a("h2",{attrs:{id:"容器数据卷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器数据卷"}},[s._v("#")]),s._v(" 容器数据卷")]),s._v(" "),a("h3",{attrs:{id:"什么是数据卷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是数据卷"}},[s._v("#")]),s._v(" 什么是数据卷")]),s._v(" "),a("p",[s._v("容器之间可以有一个数据共享的技术！docker容器中产生的数据同步到本地！")]),s._v(" "),a("p",[s._v("这就是卷技术！目录的挂载，将我们容器内的目录，挂载到linux上面！")]),s._v(" "),a("blockquote",[a("p",[s._v("特点：")]),s._v(" "),a("p",[s._v("1、数据卷可在容器之间共享或重用数据")]),s._v(" "),a("p",[s._v("2、卷中的更改可以直接生效")]),s._v(" "),a("p",[s._v("3、数据卷中的更改不会包含在镜像的更新中")]),s._v(" "),a("p",[s._v("4、数据卷的生命周期一直持续到没有容器使用它为止")])]),s._v(" "),a("p",[a("strong",[s._v("所以：总结一句话： 就是容器的持久化，以及容器间的继承和数据共享！")])]),s._v(" "),a("p",[s._v("docker管理数据的方式有两种：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("数据卷")]),s._v(" "),a("ul",[a("li",[s._v("数据卷本质就是一个文件夹，他可以实现宿主机和容器之间的数据共享")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("* 数据卷可以在容器之间共享和重用，容器间传递数据将变得高效方便\n\n* 对数据卷内数据的修改会立马生效，无论是容器内操作还是本地操作\n\n* 对数据卷的更新不会影响镜像，解耦了应用和数据\n\n* 卷会一直存在，直到没有容器使用，可以安全地卸载它\n")])])])]),s._v(" "),a("li",[a("p",[s._v("数据卷容器：挂载数据卷的容器叫做"),a("code",[s._v("数据卷容器")])]),s._v(" "),a("ul",[a("li",[s._v("通过数据卷容器可以实现容器间的数据共享")])])])]),s._v(" "),a("h3",{attrs:{id:"使用数据卷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用数据卷"}},[s._v("#")]),s._v(" 使用数据卷")]),s._v(" "),a("blockquote",[a("p",[s._v("方式一：使用-v 命令")])]),s._v(" "),a("p",[s._v("值得注意的是，主机目录会直接覆盖掉容器中要挂载的目录")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("root@localhost:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker run -it -v /home/ceshi:/home centos /bin/bash")]),s._v("\n")])])]),a("p",[s._v("如果说，宿主机/home/ceshi这个文件夹不是空的，那么在创建容器时，会自动用/home/ceshi这个目录去覆盖容器内/home这个目录")]),s._v(" "),a("p",[s._v("当docker容器内的挂载目录是有文件的，但是宿主机的目录是空的，那么docker会把容器内的目录拷贝到宿主机的目录下")]),s._v(" "),a("p",[s._v("查看数据卷是否挂载成功"),a("code",[s._v("docker inspect 容器id")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2022/10/28/DRjUa2Y6nxluKPA.png",alt:"image-20221028230427742"}})]),s._v(" "),a("p",[s._v("对于已经挂载完成的容器，二者就实现了双向绑定，无论容器是否启动，两个互相挂载的目录都是连通同步的。")]),s._v(" "),a("p",[s._v("当使用一个新的镜像时，可以去dockerhub官网去查看启动命令，如何使用，这是一个好方法！")]),s._v(" "),a("h3",{attrs:{id:"匿名挂载和具名挂载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匿名挂载和具名挂载"}},[s._v("#")]),s._v(" 匿名挂载和具名挂载")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 匿名挂载")]),s._v("\n\nroot@kuko:/var/lib/docker/volumes"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker run -d -p 3344:80 --name nginx01 -v /etc/nginx nginx")]),s._v("\n0ec1edc853b844fc61a081da9e0a3e2252a3e2a6c3f3d3a39518f3219c091499\nroot@kuko:/var/lib/docker/volumes"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker volume ls")]),s._v("\nDRIVER    VOLUME NAME\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("     4a13a782a71914ca115547f026a365d968c062617a2853dc0f6280fbb17d49be\nroot@kuko:/var/lib/docker/volumes"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),s._v("\n\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#具名挂载")]),s._v("\n\nroot@kuko:/var/lib/docker/volumes"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker run -d -p 3345:80 --name nginx02 -v nginxconfig:/etc/nginx nginx")]),s._v("\nc46b74b15b781cb8e307279989452a421c2c30d27ff7b5ef7e8a3349f43eff02\nroot@kuko:/var/lib/docker/volumes"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker volume ls")]),s._v("\nDRIVER    VOLUME NAME\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("     4a13a782a71914ca115547f026a365d968c062617a2853dc0f6280fbb17d49be\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("     nginxconfig\nroot@kuko:/var/lib/docker/volumes"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker volume inspect nginxconfig")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CreatedAt"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2022-10-29T10:05:44+08:00"')]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Driver"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"local"')]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Labels"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" null,\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Mountpoint"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/var/lib/docker/volumes/nginxconfig/_data"')]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nginxconfig"')]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Options"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" null,\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Scope"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"local"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#如何判断？")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#匿名挂载：-v 容器内部路径")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#具名挂载：-v 具名：容器内部命令")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#指定目录挂载： -v /宿主机目录:容器内部路径")]),s._v("\n\n\nps:除了指定目录挂载，具名挂载和匿名挂载都是在/var/lib/docker/volumes/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("这个目录下的\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 改变文件的读写权限")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ro: readonly   容器内部无法操作，只有外部能够操作")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rw: readwrite  容器内外都可以操作")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定容器对我们挂载出来的内容的读写权限")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认是rw")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d -P --name nginx02 -v nginxconfig:/etc/nginx:ro nginx\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d -P --name nginx02 -v nginxconfig:/etc/nginx:rw nginx\n\n\n")])])]),a("h3",{attrs:{id:"数据卷容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据卷容器"}},[s._v("#")]),s._v(" 数据卷容器")]),s._v(" "),a("p",[s._v("容器和容器间同步")]),s._v(" "),a("p",[s._v("docker01创建的内容同步到了docker02（这种同步是双向的，不在乎谁volumes-from谁）")]),s._v(" "),a("p",[a("strong",[s._v("Volume原理")])]),s._v(" "),a("p",[s._v("想要了解"),a("code",[s._v("Docker Volume")]),s._v("，首先我们需要知道"),a("code",[s._v("Docker")]),s._v("的文件系统是如何工作的。"),a("code",[s._v("Docker")]),s._v("镜像是由多个文件系统（"),a("code",[s._v("只读层")]),s._v("）叠加而成。当我们启动一个容器的时候，"),a("code",[s._v("Docker")]),s._v("会加载只读镜像层并在其上（译者注：镜像栈顶部）添加一个读写层。如果运行中的容器修改了现有的一个已经存在的文件，那该文件将会从读写层下面的只读层复制到读写层，该文件的只读版本仍然存在，只是已经被读写层中该文件的副本所隐藏。当删除"),a("code",[s._v("Docker")]),s._v("容器，并通过该镜像重新启动时，之前的更改将会丢失。在"),a("code",[s._v("Docker")]),s._v("中，只读层及在顶部的读写层的组合被称为"),a("code",[s._v("Union File System（联合文件系统）")]),s._v("。")]),s._v(" "),a("p",[s._v("为了能够保存（持久化）数据以及共享容器间的数据，"),a("code",[s._v("Docker")]),s._v("提出了"),a("code",[s._v("Volume")]),s._v("的概念。简单来说，"),a("code",[s._v("Volume")]),s._v("就是目录或者文件，它可以"),a("code",[s._v("绕过")]),s._v("默认的联合文件系统，而以正常的文件或者目录的形式存在于宿主机上。")]),s._v(" "),a("p",[a("strong",[s._v("如何使用")])]),s._v(" "),a("p",[s._v("创建父容器，并在父容器的数据卷中添加数据，以挂载父容器生成子容器，实现数据共享")]),s._v(" "),a("ul",[a("li",[s._v("启动父容器，并在父容器的 "),a("code",[s._v("dataVolumeContainer1")]),s._v("目录下新增内容")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2022/10/29/OmrFAx8pzSQC5hy.png",alt:"在这里插入图片描述"}})]),s._v(" "),a("ul",[a("li",[s._v("基于父容器生成子容器"),a("code",[s._v("son-centos")]),s._v("，注意是在宿主机中使用如下指令")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -it --name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("son-centos --volumes-from father-centos new-centos\n")])])]),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2022/10/29/63JefBMsYWESjTt.png",alt:"在这里插入图片描述"}})]),s._v(" "),a("ul",[a("li",[s._v("子容器添加数据，父容器查看数据")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2022/10/29/BDI7rj1eXYLK5QV.png",alt:"在这里插入图片描述"}})]),s._v(" "),a("ul",[a("li",[s._v("删除父容器，子容器数据依然保留")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2022/10/29/I9pngPytklFCuHQ.png",alt:"在这里插入图片描述"}})]),s._v(" "),a("p",[a("strong",[s._v("结论：容器之间配置信息的传递，数据卷的生命周期一直持续到没有容器使用它为止。")])]),s._v(" "),a("p",[s._v("个人理解：不同容器之间的继承关系，他们之间的一个数据卷共享，本质都是一个"),a("code",[s._v("软链接")]),s._v("，链接到本地的一个文件目录。所以不管容器之间的关系，或者容器怎么删除，只要本地的那个文件还在，那就生命周期还在。")]),s._v(" "),a("h2",{attrs:{id:"dockerfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[s._v("#")]),s._v(" DockerFile")]),s._v(" "),a("h3",{attrs:{id:"初识dockerfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初识dockerfile"}},[s._v("#")]),s._v(" 初识DockerFile")]),s._v(" "),a("p",[s._v("在宿主机的 "),a("code",[s._v("/root")]),s._v("目录下创建一个"),a("code",[s._v("DockerFile")]),s._v("文件 (名称随意)，并通过"),a("code",[s._v("docker build")]),s._v("指令生成镜像来添加数据卷")]),s._v(" "),a("ul",[a("li",[s._v("在宿主机的 "),a("code",[s._v("/root")]),s._v("目录下创建一个"),a("code",[s._v("DockerFile")]),s._v("文件，并添加如下内容到文件中")])]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#基于centos镜像进行构建")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" centos")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#数据卷只能指定容器数据卷，不能指定宿主机数据卷，英文并不能够保证在所有的宿主机上都存在这样的特定目录。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VOLUME")]),s._v(" ["),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/dataVolumeContainer1"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/dataVolumeContainer2"')]),s._v("]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#以 /bin/bash方式启动")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" /bin/bash")]),s._v("\n")])])]),a("p",[s._v("使用如下指令，把编写的"),a("code",[s._v("DockerFile")]),s._v("文件执行生成镜像，注意：命令最后面是空格 + "),a("code",[s._v(".")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build -f 宿主机中DockerFile文件的绝对路径 -t 新镜像名称"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":版本号"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2022/10/29/RbYr3tPQTwfKXka.png",alt:"在这里插入图片描述"}})]),s._v(" "),a("p",[s._v("运行我们生成的"),a("code",[s._v("new-centos镜像")]),s._v("，就能够查看到在容器内中生成的数据卷")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2022/10/29/5wRvE2icKPVxsSa.png",alt:"在这里插入图片描述"}})]),s._v(" "),a("p",[s._v("那么容器内的数据卷文件/目录地址已经知道，对应的宿主机文件/目录的地址怎么查看？通过如下指令")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" inspect 容器ID/容器名称\n")])])]),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2022/10/29/FtnUXv31P6buhDf.png",alt:"在这里插入图片描述"}})]),s._v(" "),a("h3",{attrs:{id:"dockerfile介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile介绍"}},[s._v("#")]),s._v(" DockerFile介绍")]),s._v(" "),a("p",[s._v("DockerFile是用来构建docker镜像的构建文件（有点类似于c++的Makefile），是由一系列命令和参数构成的脚本。")]),s._v(" "),a("p",[s._v("构建步骤")]),s._v(" "),a("ul",[a("li",[s._v("编写DockerFile文件")]),s._v(" "),a("li",[s._v("docker build 构建镜像")]),s._v(" "),a("li",[s._v("docker run")])]),s._v(" "),a("h3",{attrs:{id:"dockerfile构建过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile构建过程"}},[s._v("#")]),s._v(" DockerFile构建过程")]),s._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://s2.loli.net/2022/10/29/7hpAivH8YMnkldG.png",alt:"image-20221029161003387"}}),s._v(" "),a("p",[a("strong",[s._v("基础知识：")])]),s._v(" "),a("ol",[a("li",[s._v("每条保留字指令都必须为大写字母且后面要跟随至少一个参数")]),s._v(" "),a("li",[s._v("指令按照从上到下，顺序执行")]),s._v(" "),a("li",[s._v("# 表示注释")]),s._v(" "),a("li",[s._v("每条指令都会创建一个新的镜像层，并对镜像进行提交")])]),s._v(" "),a("p",[a("strong",[s._v("流程：")])]),s._v(" "),a("ol",[a("li",[s._v("docker从基础镜像运行一个容器")]),s._v(" "),a("li",[s._v("执行一条指令并对容器做出修改")]),s._v(" "),a("li",[s._v("执行类似 docker commit 的操作提交一个新的镜像层")]),s._v(" "),a("li",[s._v("Docker再基于刚提交的镜像运行一个新容器")]),s._v(" "),a("li",[s._v("执行dockerfile中的下一条指令直到所有指令都执行完成！")])]),s._v(" "),a("p",[a("strong",[s._v("说明：")])]),s._v(" "),a("p",[s._v("从应用软件的角度来看，DockerFile，docker镜像与docker容器分别代表软件的三个不同阶段。")]),s._v(" "),a("ul",[a("li",[s._v("DockerFile 是软件的原材料 （代码）")]),s._v(" "),a("li",[s._v("Docker 镜像则是软件的交付品 （.apk）")]),s._v(" "),a("li",[s._v("Docker 容器则是软件的运行状态 （客户下载安装执行）")])]),s._v(" "),a("p",[s._v("DockerFile 面向开发，Docker镜像成为交付标准，Docker容器则涉及部署与运维，三者缺一不可！")]),s._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://s2.loli.net/2022/10/29/algHZc7tiu8J4mw.png",alt:"image-20221029200140891"}}),s._v(" "),a("p",[s._v("DockerFile：需要定义一个DockerFile，DockerFile定义了进程需要的一切东西。DockerFile涉及的内容 包括执行代码或者是文件、环境变量、依赖包、运行时环境、动态链接库、操作系统的发行版、服务进程和内核进程（当引用进行需要和系统服务和内核进程打交道，这时需要考虑如何设计 namespace的权限控制）等等。")]),s._v(" "),a("p",[s._v("Docker镜像：在DockerFile 定义了一个文件之后，Docker build 时会产生一个Docker镜像，当运行 Docker 镜像时，会真正开始提供服务；")]),s._v(" "),a("p",[s._v("Docker容器：容器是直接提供服务的。")]),s._v(" "),a("h3",{attrs:{id:"dockerfile指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile指令"}},[s._v("#")]),s._v(" DockerFile指令")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("FROM         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 基础镜像，当前镜像是基于那个镜像的；一般比如：centos、Ubuntu、sketch")]),s._v("\nMAINTAINER   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 所有者信息，Jacky<kukoray@163.com>")]),s._v("\nRUN          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器构建时所需要运行的命令；比如下载安装包，比如拷贝文件")]),s._v("\nEXPOSE       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器对外保留的端口")]),s._v("\nWORKDIR      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建容器后，运行后，进入容器的工作目录")]),s._v("\nENV          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置环境变量")]),s._v("\nADD          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将宿主机目录下的文件拷贝进镜像，并且会自动处理URL和解压tar压缩包")]),s._v("\nCOPY         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 类似于ADD，不过这个只是将宿主机目录下的文件拷贝进镜像")]),s._v("\nVOLUME       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器数据卷")]),s._v("\nCMD          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定一个容器启动时要运行的命令，  dockerFile中可以有多个CMD指令，但只有最后一个生效！")]),s._v("\nENTRYPOINT   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 和CMD相似，不过CMD不可追加，这个可以追加")]),s._v("\nONBUILD      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当构建一个被继承的DockerFile时运行命令，父镜像在被子镜像继承后，父镜像的ONBUILD被触发")]),s._v("\n")])])]),a("h3",{attrs:{id:"实战测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实战测试"}},[s._v("#")]),s._v(" 实战测试")]),s._v(" "),a("p",[s._v("Docker Hub 中99% 的镜像都是通过在base镜像（Scratch，大小只有几十k）中安装和配置需要的软件构建出来的")]),s._v(" "),a("p",[s._v("对于DockerFile的名字，如果是 "),a("code",[s._v("Dockerfile")]),s._v(" 那么在build命令中，就不需要显式指明，会自动去寻找；如果是其他名字的话，就需要显式指明。")]),s._v(" "),a("p",[a("strong",[s._v("1、编写DockerFile文件")])]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" ubuntu")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("MAINTAINER")]),s._v(" jacky<kukoray@163.com>")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" MYPATH /usr/local")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$MYPATH")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" apt-get update --fix-missing && apt-get install -y vim --fix-missing")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" apt-get install -y net-tools")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" 80")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" echo "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$MYPATH")]),s._v("                            #这两句本质上是没有用的")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" echo "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-------------end-----------"')]),s._v("      #这两句本质上是没有用的")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" /bin/bash")]),s._v("\n")])])]),a("p",[a("strong",[s._v("2、build构建镜像")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build -f dockerfile地址 -t 新镜像名字:TAG "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])])]),a("p",[s._v("一定记住最后是有个 "),a("code",[s._v(".")]),s._v("  的 ，这个点代表的意思是当前目录，不然的话就需要使用绝对路径。")]),s._v(" "),a("p",[s._v("然后由于我这里使用的是官方默认的命名方式 "),a("code",[s._v("DockerFile")]),s._v(" ，所以不需要指明dockerfile的地址")]),s._v(" "),a("p",[a("strong",[s._v("3、运行镜像")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2022/10/29/mO4n1gaHAG2Dq5u.png",alt:"image-20221029220256509"}})]),s._v(" "),a("p",[a("strong",[s._v("4、列出镜像的变更历史")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" 镜像名\n\nroot@kuko:/etc/ssh"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker history myubuntu:1.0")]),s._v("\nIMAGE          CREATED             CREATED BY                                      SIZE      COMMENT\n805c0aab3b15   About an hour ago   /bin/sh -c "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#(nop)  CMD ["/bin/sh" "-c" "/bin…   0B        ')]),s._v("\n61ddb9acac96   About an hour ago   /bin/sh -c "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#(nop)  CMD ["/bin/sh" "-c" "echo…   0B        ')]),s._v("\nb03f851acadd   About an hour ago   /bin/sh -c "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#(nop)  CMD ["/bin/sh" "-c" "echo…   0B        ')]),s._v("\ncafd1560d60b   About an hour ago   /bin/sh -c "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#(nop)  EXPOSE 80                    0B        ")]),s._v("\nd63d2612c9ad   About an hour ago   /bin/sh -c "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y net-tools         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(".46MB    \n8124a8b358fd   About an hour ago   /bin/sh -c "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update --fix-missing "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" a…   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("98")]),s._v(".7MB    \ne18a2d827245   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours ago         /bin/sh -c "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#(nop) WORKDIR /usr/local            0B        ")]),s._v("\nc5fa3f5c96da   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours ago         /bin/sh -c "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#(nop)  ENV MYPATH=/usr/local        0B        ")]),s._v("\nad3343a70b79   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours ago         /bin/sh -c "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#(nop)  MAINTAINER jacky<kukoray@…   0B        ")]),s._v("\ncdb68b455a14   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" days ago          /bin/sh -c "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#(nop)  CMD ["bash"]                 0B        ')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("missing"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" days ago          /bin/sh -c "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#(nop) ADD file:ba96f963bbfd429a0…   77.8MB    ")]),s._v("\n")])])]),a("h3",{attrs:{id:"发布镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发布镜像"}},[s._v("#")]),s._v(" 发布镜像")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1、登陆dockerhub")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" login -u kukoray\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2、将镜像发布出去")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" push kukoray/myubuntu:1.0\n")])])]),a("p",[s._v("当然发布到自己的阿里云镜像或者百度云镜像都是一样的操作，看官方文档即可")]),s._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://s2.loli.net/2022/10/29/YwJzjdW2rB1ubEK.png",alt:"image-20221029224137079"}}),s._v(" "),a("h2",{attrs:{id:"docker网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker网络"}},[s._v("#")]),s._v(" docker网络")]),s._v(" "),a("h2",{attrs:{id:"理解docker0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#理解docker0"}},[s._v("#")]),s._v(" 理解docker0")]),s._v(" "),a("p",[s._v("本质：docker0就是路由器")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2022/10/29/weoiOl8MWnAqmVc.png",alt:"image-20221029224657780"}})]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这里讲一个东西")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 我们平时用 ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -it tomcat /bin/bash\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 其实最后的/bin/bash的意思是，在进入容器后，执行这条命令")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 同理，我们有时候可以精简我们的操作")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 例如：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -it tomcat "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" addr\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 就是进入tomcat容器后，展示容器的内部网络地址")]),s._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2022/10/29/8sADG7TPunNtqZB.png",alt:"image-20221029230859396"}})]),s._v(" "),a("p",[s._v("docker中所有的网络接口都是虚拟的，虚拟的转发效率高（内网传递文件 10mb/s）")])])}),[],!1,null,null,null);t.default=e.exports}}]);