(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{530:function(t,a,s){"use strict";s.r(a);var n=s(65),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"lua入门"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lua入门"}},[t._v("#")]),t._v(" Lua入门")]),t._v(" "),s("blockquote",[s("p",[t._v("参考博客：")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.runoob.com/lua/lua-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Lua 教程 | 菜鸟教程"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),s("p",[t._v("Lua 是一种轻量小巧的脚本语言，用标准C语言编写并以源代码形式开放。")]),t._v(" "),s("p",[t._v("设计目的是为了嵌入应用程序中，从而为应用程序提供灵活的扩展和定制功能。")]),t._v(" "),s("h2",{attrs:{id:"特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[t._v("#")]),t._v(" 特性")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("轻量级")]),t._v(": 它用标准C语言编写并以源代码形式开放，编译后仅仅一百余K，可以很方便的嵌入别的程序里。")]),t._v(" "),s("li",[s("strong",[t._v("可扩展")]),t._v(": Lua提供了非常易于使用的扩展接口和机制：由宿主语言(通常是C或C++)提供这些功能，Lua可以使用它们，就像是本来就内置的功能一样。")]),t._v(" "),s("li",[s("strong",[t._v("其它特性")]),t._v(":\n"),s("ul",[s("li",[t._v("支持面向过程(procedure-oriented)编程和函数式编程(functional programming)；")]),t._v(" "),s("li",[t._v("自动内存管理；只提供了一种通用类型的表（table），用它可以实现数组，哈希表，集合，对象；")]),t._v(" "),s("li",[t._v("语言内置模式匹配；闭包(closure)"),s("strong",[t._v("；函数也可以看做一个值")]),t._v("；提供多线程（"),s("strong",[t._v("协程")]),t._v("，协同进程，并非操作系统所支持的线程）支持；")]),t._v(" "),s("li",[t._v("通过闭包和table可以很方便地支持面向对象编程所需要的一些关键机制，比如数据抽象，虚函数，继承和重载等。")])])])]),t._v(" "),s("h2",{attrs:{id:"应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),s("ul",[s("li",[t._v("游戏开发")]),t._v(" "),s("li",[t._v("独立应用脚本")]),t._v(" "),s("li",[t._v("Web 应用脚本")]),t._v(" "),s("li",[t._v("扩展和数据库插件如：MySQL Proxy 和 MySQL WorkBench")]),t._v(" "),s("li",[t._v("安全系统，如入侵检测系统")])]),t._v(" "),s("h2",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),s("p",[t._v("ubuntu")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -R -O http://www.lua.org/ftp/lua-5.4.4.tar.gz\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" zxf lua-5.4.4.tar.gz\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" lua-5.4.4\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" all "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("root@VM-4-9-ubuntu:/opt/lua/lua-5.4.4"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# lua")]),t._v("\nLua "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.4")]),t._v(".4  Copyright "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("C"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1994")]),t._v("-2022 Lua.org, PUC-Rio\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" print"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nhello world\n")])])]),s("h2",{attrs:{id:"数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),s("p",[t._v("Lua 是动态类型语言，变量不要类型定义,只需要为变量赋值。 值可以存储在变量中，作为参数传递或结果返回。")]),t._v(" "),s("p",[t._v("Lua 中有 8 个基本类型分别为：nil、boolean、number、string、userdata、function、thread 和 table。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("数据类型")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("nil")]),t._v(" "),s("td",[t._v("这个最简单，只有值nil属于该类，表示一个无效值（在条件表达式中相当于false）。")])]),t._v(" "),s("tr",[s("td",[t._v("boolean")]),t._v(" "),s("td",[t._v("包含两个值：false和true。")])]),t._v(" "),s("tr",[s("td",[t._v("number")]),t._v(" "),s("td",[t._v("表示双精度类型的实浮点数")])]),t._v(" "),s("tr",[s("td",[t._v("string")]),t._v(" "),s("td",[t._v("字符串由一对双引号或单引号来表示")])]),t._v(" "),s("tr",[s("td",[t._v("function")]),t._v(" "),s("td",[t._v("由 C 或 Lua 编写的函数")])]),t._v(" "),s("tr",[s("td",[t._v("userdata")]),t._v(" "),s("td",[t._v("表示任意存储在变量中的C数据结构")])]),t._v(" "),s("tr",[s("td",[t._v("thread")]),t._v(" "),s("td",[t._v("表示执行的独立线路，用于执行协同程序")])]),t._v(" "),s("tr",[s("td",[t._v("table")]),t._v(" "),s("td",[t._v('Lua 中的表（table）其实是一个"关联数组"（associative arrays），数组的索引可以是数字、字符串或表类型。在 Lua 里，table 的创建是通过"构造表达式"来完成，最简单构造表达式是{}，用来创建一个空表。')])])])]),t._v(" "),s("h2",{attrs:{id:"基本语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本语法"}},[t._v("#")]),t._v(" 基本语法")]),t._v(" "),s("p",[s("strong",[t._v("1、循环")])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"循环将永远执行下去"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),s("p",[s("strong",[t._v("2、流程控制")])]),t._v(" "),s("blockquote",[s("p",[t._v("注意elseif 和 else if是有区别的。")]),t._v(" "),s("p",[t._v("前者是我们熟悉的elseif分支；")]),t._v(" "),s("p",[t._v("后者是：")]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v("\n")])])])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("布尔表达式 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--[ 布尔表达式 1 为 true 时执行该语句块 --]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elseif")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("布尔表达式 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--[ 布尔表达式 2 为 true 时执行该语句块 --]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- [前两者都不满足时执行该语句块]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),s("p",[s("strong",[t._v("3、函数")])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" num2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n      result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n      result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);