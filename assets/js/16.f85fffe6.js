(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{437:function(_,t,v){"use strict";v.r(t);var s=v(65),a=Object(s.a)({},(function(){var _=this,t=_.$createElement,v=_._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"计算机组成原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#计算机组成原理"}},[_._v("#")]),_._v(" 计算机组成原理")]),_._v(" "),v("h2",{attrs:{id:"_1-中断机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-中断机制"}},[_._v("#")]),_._v(" 1. 中断机制")]),_._v(" "),v("h3",{attrs:{id:"_1-1-什么是中断"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-什么是中断"}},[_._v("#")]),_._v(" 1.1 什么是中断？")]),_._v(" "),v("p",[_._v("中断（interrupt）是计算机系统中的基本机制之一。即：在计算机运行过程中，当发生某个事件后，CPU 会停止当前程序流，转而去处理该事件，并在处理完毕后继续执行原程序流。")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://pic3.zhimg.com/80/v2-202769bdb2991338d165bb01f0830002_720w.jpg",alt:"img"}})]),_._v(" "),v("h3",{attrs:{id:"_1-2-为什么引入中断"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-为什么引入中断"}},[_._v("#")]),_._v(" 1.2 为什么引入中断？")]),_._v(" "),v("p",[_._v("中断机制的好处是 "),v("strong",[_._v("化主动为被动，避免 CPU 轮询等待某条件成立")]),_._v("。如果没有中断机制，那么“某个条件成立”就需要 CPU 轮询判断，这样就会增加系统的开销。而使用中断机制，就可以在条件成立之后，向 CPU 发送中断事件，强制中断 CPU 执行程序，转而去执行中断处理程序。")]),_._v(" "),v("h3",{attrs:{id:"_1-3-硬中断"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-硬中断"}},[_._v("#")]),_._v(" 1.3 硬中断")]),_._v(" "),v("p",[_._v("硬中断由外部设备（例如：磁盘，网卡，键盘，时钟）产生，用来通知操作系统外设状态变化。")]),_._v(" "),v("blockquote",[v("p",[v("strong",[_._v("时钟中断：")]),_._v(" 一种硬中断，用于定期打断 CPU 执行的线程，以便切换给其他线程以得到执行机会。")])]),_._v(" "),v("p",[_._v("硬中断的处理流程如下：")]),_._v(" "),v("ul",[v("li",[_._v("1、"),v("strong",[_._v("外设")]),_._v(" 将中断请求发送给中断控制器；")]),_._v(" "),v("li",[_._v("2、"),v("strong",[_._v("中断控制器")]),_._v(" 根据中断优先级，有序地将中断传递给 CPU；")]),_._v(" "),v("li",[_._v("3、"),v("strong",[_._v("CPU")]),_._v(" 终止执行当前程序流，将 CPU 所有寄存器的数值保存到栈中；")]),_._v(" "),v("li",[_._v("4、"),v("strong",[_._v("CPU")]),_._v(" 根据中断向量，从中断向量表中查找中断处理程序的入口地址，执行中断处理程序；")]),_._v(" "),v("li",[_._v("5、"),v("strong",[_._v("CPU")]),_._v(" 恢复寄存器中的数值，返回原程序流停止位置继续执行。")])]),_._v(" "),v("h3",{attrs:{id:"_1-4-软中断"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-软中断"}},[_._v("#")]),_._v(" 1.4 "),v("strong",[_._v("软中断")])]),_._v(" "),v("p",[_._v("软中断是一条 CPU 指令，由当前正在运行的进程产生。")]),_._v(" "),v("p",[_._v("软中断模拟了硬中断的处理过程：")]),_._v(" "),v("ul",[v("li",[_._v("1、无")]),_._v(" "),v("li",[_._v("2、无")]),_._v(" "),v("li",[_._v("3、"),v("strong",[_._v("CPU")]),_._v(" 终止执行当前程序流，将 CPU 所有寄存器的数值保存到栈中；")]),_._v(" "),v("li",[_._v("4、"),v("strong",[_._v("CPU")]),_._v(" 根据中断向量，从中断向量表中查找中断处理程序的入口地址，执行中断处理程序；")]),_._v(" "),v("li",[_._v("5、"),v("strong",[_._v("CPU")]),_._v(" 恢复寄存器中的数值，返回原程序流停止位置继续执行。")])]),_._v(" "),v("blockquote",[v("p",[v("strong",[_._v("系统调用：")]),_._v(" 是一种软中断处理程序，用于让程序从用户态陷入内核态，以执行相应的操作。")])]),_._v(" "),v("h2",{attrs:{id:"_2-系统调用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-系统调用"}},[_._v("#")]),_._v(" 2. 系统调用")]),_._v(" "),v("h3",{attrs:{id:"_2-1-操作系统与应用的边界"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-操作系统与应用的边界"}},[_._v("#")]),_._v(" 2.1 操作系统与应用的边界")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("内核空间")])])]),_._v(" "),v("p",[_._v("操作系统（Operating System）是管理计算机硬件与软件资源的程序，操作系统内核驻留在受保护的内核空间。")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("用户空间")])])]),_._v(" "),v("p",[_._v("应用是运行在操作系统上运行的程序，工作在用户空间。")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("隔离")])])]),_._v(" "),v("p",[_._v("处于安全性和稳定性考虑，用户空间程序无法直接执行内核代码（例如：I/O 读写、创建新进程/线程），也无法访问内核数据，必须通过系统调用。")]),_._v(" "),v("h3",{attrs:{id:"_2-2-系统调用的定义"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-系统调用的定义"}},[_._v("#")]),_._v(" 2.2 系统调用的定义")]),_._v(" "),v("p",[v("strong",[_._v("系统调用（Syscall）")]),_._v(" 是一种软中断处理程序，用于让程序从用户态陷入内核态，以执行相应的操作。")]),_._v(" "),v("h3",{attrs:{id:"_2-3-系统调用的作用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-系统调用的作用"}},[_._v("#")]),_._v(" 2.3 系统调用的作用")]),_._v(" "),v("p",[_._v("当发生系统调用时，会让程序从用户态陷入内核态，以执行相应的操作。")]),_._v(" "),v("h3",{attrs:{id:"_2-4-系统调用中断处理程序的流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-系统调用中断处理程序的流程"}},[_._v("#")]),_._v(" 2.4 系统调用中断处理程序的流程")]),_._v(" "),v("ul",[v("li",[_._v("1、程序从用户态陷入内核态")]),_._v(" "),v("li",[_._v("2、根据系统调用号，在系统调用表中查找对应的系统调用函数的内存地址，执行系统调用函数。")]),_._v(" "),v("li",[_._v("3、程序从内核态返回用户态")])]),_._v(" "),v("p",[_._v("中断向量表：每个中断都有对应的中断号并对应处理程序")]),_._v(" "),v("p",[_._v("其中系统调用的中断号为0x80")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://s2.loli.net/2022/07/04/enbZl2Cs9ifSMdy.jpg",alt:"img"}})]),_._v(" "),v("p",[v("img",{attrs:{src:"https://s2.loli.net/2022/07/04/tkNxLhqwvJoDESV.jpg",alt:"img"}})]),_._v(" "),v("p",[v("img",{attrs:{src:"https://s2.loli.net/2022/07/04/fq1S3MRpJFmnotc.jpg",alt:"img"}})])])}),[],!1,null,null,null);t.default=a.exports}}]);