(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{538:function(t,r,e){"use strict";e.r(r);var v=e(65),s=Object(v.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"jvm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jvm"}},[t._v("#")]),t._v(" JVM")]),t._v(" "),e("h2",{attrs:{id:"对象头"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对象头"}},[t._v("#")]),t._v(" 对象头")]),t._v(" "),e("p",[t._v("在"),e("a",{attrs:{href:"https://so.csdn.net/so/search?q=JVM&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"}},[t._v("JVM"),e("OutboundLink")],1),t._v("中，对象在内存中的布局分为三块区域：对象头、实例数据和对齐填充。")]),t._v(" "),e("p",[t._v("1、对象头 ------（大小固定）")]),t._v(" "),e("p",[t._v("2、实例数据 ------- （大小不固定）")]),t._v(" "),e("p",[t._v("3、对齐填充（使得对象的大小是8字节的整数倍）")]),t._v(" "),e("p",[t._v("java 中的锁，锁的就是"),e("code",[t._v("对象")]),t._v("，本质上是"),e("code",[t._v("对象头")])]),t._v(" "),e("h2",{attrs:{id:"synchronized"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#synchronized"}},[t._v("#")]),t._v(" Synchronized")]),t._v(" "),e("p",[t._v("作用：实现线程同步，让多个线程排队一次获取某个资源，保证数据不会出错")]),t._v(" "),e("p",[t._v("synchronized到底锁的是什么元素？")]),t._v(" "),e("ul",[e("li",[t._v("修饰方法\n"),e("ul",[e("li",[t._v("静态方法：锁的是"),e("strong",[t._v("类")])]),t._v(" "),e("li",[t._v("非静态方法：锁的是调用该方法的对象（实例）")])])]),t._v(" "),e("li",[t._v("修饰代码块：锁的是传入的对象\n"),e("ul",[e("li",[t._v("如果传入的对象是唯一的，临界资源，需要去争夺的，那么就会发生阻塞")])])])])])}),[],!1,null,null,null);r.default=s.exports}}]);